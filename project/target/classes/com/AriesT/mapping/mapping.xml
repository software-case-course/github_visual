<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.AriesT.mapping.mapping">

<!-- 基础sql操作  -->
	<select id="checkifexist" parameterType="java.util.HashMap" resultType="java.lang.Object" >
		select * from ${basename} where
		<foreach collection="key" item="item" index="index" open="(" separator="and" close=")">
			${item} = #{${item}}
		</foreach>
		;
	</select>
	
	<insert id="inserttodao" parameterType="java.util.HashMap">
		insert into ${basename} 
		<foreach collection="col" item="item" index="index" open="(" separator="," close=")">
			${item}
		</foreach>
 		values
 		<foreach collection="addlist" item="itemlist" index="index" separator=",">
			<foreach collection="col" item="item" index="index" open="(" separator="," close=")">
				#{itemlist.${item}}
			</foreach>
		</foreach>
		;
	</insert>
	
	<update id="updatetodao" parameterType="java.util.HashMap">
		<foreach collection="updatelist" item="itemlist" index="index" separator=";">
			update
			${basename}
			set
			<foreach collection="col" item="item" index="index" separator=",">
				${item}
				=
				#{itemlist.${item}}
			</foreach>
			where
			<foreach collection="key" item="item" index="index" open="(" separator="and" close=")">
				${item} = #{itemlist.${item}}
			</foreach>
		</foreach>
	</update>


	<insert id="insertyear" parameterType="List">
		insert into RepoLanguageCount (language, year, month, number) values
		<foreach collection="list" item="Data_Language_Use" index="index" separator=",">
			( #{Data_Language_Use.language}, #{Data_Language_Use.data.year},
			#{Data_Language_Use.data.month}, #{Data_Language_Use.data.number})
		</foreach>
	</insert>
	
	<delete id="deleteyear">
		delete from datalanguage;
	</delete>

	<select id="getallrepobystars" resultType="com.AriesT.Entity.Repository">
		select repo_name,owner,location,language,stars,forks from Repositorys order by stars desc limit 500
	</select>

	<select id="getlangrepobystars" resultType="com.AriesT.Entity.Repository">
		select repo_name,owner,location,language,stars,forks from Repositorys where language=#{language} order by stars desc limit 100
	</select>

	<select id="getallrepobyforks" resultType="com.AriesT.Entity.Repository">
		select repo_name,owner,location,language,stars,forks from Repositorys order by forks desc limit 500
	</select>

	<select id="getlangrepobyforks" resultType="com.AriesT.Entity.Repository">
		select repo_name,owner,location,language,stars,forks from Repositorys where language=#{language} order by forks desc limit 100
	</select>

	<select id="getuserlocation" resultType="com.AriesT.Entity.User">
		select * from Users where user_name=#{user_name}
	</select>
</mapper>  
